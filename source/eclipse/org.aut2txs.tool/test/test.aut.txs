-- "EAT_P2" originates from "eat(p2)"
-- "EAT_P1" originates from "eat(p1)"
-- "LOCK_P2_F2" originates from "lock(p2, f2)"
-- "LOCK_P1_F1" originates from "lock(p1, f1)"
-- "FREE_P1_F1" originates from "free(p1, f1)"
-- "LOCK_P2_F1" originates from "lock(p2, f1)"
-- "FREE_P2_F2" originates from "free(p2, f2)"
-- "FREE_P1_F2" originates from "free(p1, f2)"
-- "FREE_P2_F1" originates from "free(p2, f1)"
-- "LOCK_P1_F2" originates from "lock(p1, f2)"

CHANDEF Chans ::=
	A :: String
ENDDEF

PROCDEF p [A :: String] (state :: Int) ::=
	   A ! "LOCK_P2_F2" [[ state == 0 ]] >-> p [A] (1)
	## A ! "LOCK_P1_F1" [[ state == 0 ]] >-> p [A] (2)
	## A ! "LOCK_P1_F1" [[ state == 1 ]] >-> p [A] (3)
	## A ! "LOCK_P2_F1" [[ state == 1 ]] >-> p [A] (4)
	## A ! "LOCK_P2_F2" [[ state == 2 ]] >-> p [A] (3)
	## A ! "LOCK_P1_F2" [[ state == 2 ]] >-> p [A] (5)
	## A ! "EAT_P2" [[ state == 4 ]] >-> p [A] (6)
	## A ! "EAT_P1" [[ state == 5 ]] >-> p [A] (7)
	## A ! "FREE_P2_F2" [[ state == 6 ]] >-> p [A] (8)
	## A ! "FREE_P1_F1" [[ state == 7 ]] >-> p [A] (9)
	## A ! "FREE_P2_F1" [[ state == 8 ]] >-> p [A] (0)
	## A ! "FREE_P1_F2" [[ state == 9 ]] >-> p [A] (0)
ENDDEF

MODELDEF Model ::=
CHAN IN
CHAN OUT A
BEHAVIOUR p [A] (0)
ENDDEF
